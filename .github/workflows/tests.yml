name: Tests

on: 
  push:
  pull_request:
  schedule:
    # runs the CI everyday at 10AM
    - cron: "0 10 * * *"

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  geojson2h3_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.sdk }}
          architecture: x64

      - name: Install coverage tool
        run: dart pub global activate coverage

      - name: Override dependencies
        run: dart scripts/dependency_override.dart

      - name: Install dependencies
        run: dart pub get
        working-directory: ./geojson2h3_plus

      - name: Analyze
        run: dart analyze
        working-directory: ./geojson2h3_plus

      - name: Run tests
        run: dart pub global run coverage:test_with_coverage
        working-directory: ./geojson2h3_plus

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./geojson2h3_plus/coverage/lcov.info
          flags: geojson2h3
          token: ${{ secrets.CODECOV_TOKEN }}

  h3_common_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.sdk }}
          architecture: x64

      - name: Install coverage tool
        run: dart pub global activate coverage

      - name: Override dependencies
        run: dart scripts/dependency_override.dart

      - name: Install dependencies
        run: dart pub get
        working-directory: ./h3_common_plus

      - name: Analyze
        run: dart analyze
        working-directory: ./h3_common_plus

      - name: Run tests
        run: dart pub global run coverage:test_with_coverage
        working-directory: ./h3_common_plus

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./h3_common_plus/coverage/lcov.info
          flags: h3_common
          token: ${{ secrets.CODECOV_TOKEN }}

  h3_dart_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.sdk }}
          architecture: x64

      - name: Install coverage tool
        run: dart pub global activate coverage
  
      - name: Prepare tests
        run: sh scripts/prepare_tests.sh

      - name: Override dependencies
        run: dart scripts/dependency_override.dart

      - name: Install dependencies
        run: dart pub get
        working-directory: ./h3_dart_plus

      - name: Analyze
        run: dart analyze
        working-directory: ./h3_dart_plus

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Run tests (VM)
        run: dart pub global run coverage:test_with_coverage
        working-directory: ./h3_dart_plus

      - name: Run tests (Web)
        run: dart test -p chrome
        working-directory: ./h3_dart_plus

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./h3_dart_plus/coverage/lcov.info
          flags: h3_dart
          token: ${{ secrets.CODECOV_TOKEN }}

  h3_ffi_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.sdk }}
          architecture: x64

      - name: Install coverage tool
        run: dart pub global activate coverage
  
      - name: Prepare tests
        run: sh scripts/prepare_tests.sh

      - name: Override dependencies
        run: dart scripts/dependency_override.dart

      - name: Install dependencies
        run: dart pub get
        working-directory: ./h3_ffi_plus

      - name: Analyze
        run: dart analyze
        working-directory: ./h3_ffi_plus

      - name: Run tests
        run: dart pub global run coverage:test_with_coverage
        working-directory: ./h3_ffi_plus

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./h3_ffi_plus/coverage/lcov.info
          flags: h3_ffi
          token: ${{ secrets.CODECOV_TOKEN }}

  h3_flutter_test_android:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: beta
          architecture: x64
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Disable macOS
        run: flutter config --no-enable-macos-desktop
        working-directory: ./h3_flutter_plus
      
      - name: Disable web
        run: flutter config --no-enable-web
        working-directory: ./h3_flutter_plus
      
      - name: Override dependencies
        run: dart scripts/dependency_override.dart
      
      - name: Pub get
        run: flutter pub get
        working-directory: ./h3_flutter_plus
      
      - name: Analyze
        run: flutter analyze
        working-directory: ./h3_flutter_plus
      
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
      
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-31-x86-64-ubuntu
      
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          working-directory: ./h3_flutter_plus/example
          script: flutter test integration_test/app_test.dart
  h3_flutter_test_desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ] # disable macos while https://github.com/github/roadmap/issues/620 is open
    steps:
    - uses: actions/checkout@v2

    - name: Install linux dependencies
      run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      if: matrix.os == 'ubuntu-latest'

    - name: Setup subosito/flutter-action@v2
      uses: subosito/flutter-action@v2
      with:
        channel: beta
        architecture: x64

    - name: Enable linux
      run: flutter config --enable-linux-desktop

    - name: Enable macos
      run: flutter config --enable-macos-desktop

    - name: Enable windows
      run: flutter config --enable-windows-desktop
    
    - name: Override dependencies
      run: dart scripts/dependency_override.dart

    - name: Pub get
      run: "flutter pub get"
      working-directory: ./h3_flutter_plus

    - name: Analyze
      run: "flutter analyze"
      working-directory: ./h3_flutter_plus

    - name: Disable web
      run: flutter config --no-enable-web
      working-directory: ./h3_flutter_plus

    - name: Run tests (linux)
      run: | 
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          flutter test integration_test/app_test.dart
      working-directory: ./h3_flutter/example
      if: matrix.os == 'ubuntu-latest'

    - name: Run tests
      run: flutter test integration_test/app_test.dart
      working-directory: ./h3_flutter/example
      if: matrix.os != 'ubuntu-latest'

  h3_flutter_test_web:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Setup subosito/flutter-action@v2
      uses: subosito/flutter-action@v2
      with:
        channel: beta
        architecture: x64

    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest
      with:
          chrome-version: 136
          install-chromedriver: true
    - run: |
        export DISPLAY=:99
        chromedriver --port=4444 &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
    
    - name: Override dependencies
      run: dart scripts/dependency_override.dart

    - name: Pub get
      run: "flutter pub get"
      working-directory: ./h3_flutter_plus

    - name: Analyze
      run: "flutter analyze"
      working-directory: ./h3_flutter_plus

    - name: Disable linux
      run: flutter config --no-enable-linux-desktop
      working-directory: ./h3_flutter_plus

    - name: Run tests
      run: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart -d web-server
      working-directory: ./h3_flutter_plus/example

  h3_web_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.sdk }}
          architecture: x64

      - name: Override dependencies
        run: dart scripts/dependency_override.dart

      - name: Install dependencies
        run: dart pub get
        working-directory: ./h3_web_plus

      - name: Analyze
        run: dart analyze
        working-directory: ./h3_web_plus

      - name: Run tests
        run: dart test -p chrome
        working-directory: ./h3_web_plus